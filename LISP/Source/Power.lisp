(defun bigcons(e l)
    (cond ((null l) '(nil))
        (t (cons (cons e (car l)) (bigcons e (cdr l))))
    )
)
(defun power(l)
    (cond ((null l) '(nil))
        (t (append (power (cdr l)) (bigcons (car l) (power (cdr l)))))
    )
)
(setf A (power '(A)))
(setf B (power '(A B)))
(setf C (power '(A B C)))
(setf D (power '(A B C D)))
(setf E (power '(A B C D E)))
(print A)
(print B)
(print C)
(print D)
(print E)