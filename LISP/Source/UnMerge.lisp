(defun unmerge(l)
    (cond ((null l) '(nil nil))
        (t (append (list (odd l)) (list (even l))))
    )
)
(defun odd(l)
    (cond ((null l) nil)
        (t (cons (car l) (odd (cddr l))))
    )
)
(defun even(l)
    (cond ((null l) nil)
        (t (append (odd (cdr l))))
    )
)
(setf A (unmerge '(1 2 3 4 5 6)))
(setf B (unmerge '(A B C D E)))
(setf C (unmerge '(X (Y Z) W)))
(setf D (unmerge '(A)))
(setf E (unmerge nil))
(print A)
(print B)
(print C)
(print D)
(print E)